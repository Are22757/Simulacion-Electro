import numpy as np
import matplotlib.pyplot as plt
from mpl_toolkits.mplot3d import Axes3D

def V(x, y, V0, a, b):
    result = 0
    for n in range(1, 6):
        numerator = np.sin(n*np.pi*x/b) * np.sinh(n*np.pi*y/b)
        denominator = n * np.sinh(n*np.pi*a/b)
        result += numerator / denominator
    return (4*V0/np.pi) * result

# Valores para la función
V0 = 100
a = 1
b = 1

# Crear puntos en el espacio 3D
x_values = np.linspace(0, 1, 100)
y_values = np.linspace(0, 1, 100)
X, Y = np.meshgrid(x_values, y_values)
Z = V(X, Y, V0, a, b)

# Graficar la función
fig = plt.figure(figsize=(10, 8))
ax = fig.add_subplot(111, projection='3d')
ax.plot_surface(X, Y, Z, cmap='viridis')
ax.set_xlabel('x')
ax.set_ylabel('y')
ax.set_zlabel('V(x, y)')
ax.set_title('Gráfico de V(x, y)')
plt.show()
